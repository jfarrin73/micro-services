spring:
  application:
    name: EMPLOYEE-SERVICE
  config:
    import: optional:configserver:http://localhost:8888
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

management:
  tracing:
    sampling:
      probability: 1.0

# Actuator endpoint for Circuit Breaker
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*" # Health is the important one here, but * is left from previous
  endpoint:
    health:
      show-details: always

# Circuit Breaker configuration. see resilience4j documentation for details
resilience4j:
  circuitbreaker:
    instances:
      EMPLOYEE-SERVICE:
        register-health-indicator: true
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED

logging:
  level:
    org.springframework.web: DEBUG
  pattern:
    level:
      '%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]'


#  datasource:
#    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5445}/${POSTGRES_DB:udemy_2}
#    username: ${POSTGRES_USERNAME:udemy_2}
#    password: ${POSTGRES_PASSWORD:udemy_2}
#    driver-class-name: org.postgresql.Driver
#    connectionProperties:
#      sslFactory: org.postgresql.ssl.DefaultJavaSSLFactory
#
#  jpa:
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
#      ddl-auto: update
#
#server:
#  port: 8081
#
#eureka:
#  instance:
#    client:
#      serverUrl:
#        defaultZone: http://localhost:8761/eureka